[versions]
org-jetbrains-kotlin = "1.8.20"
org-springframework = { prefer = "5.3.23" }
org-springframework-boot = { prefer = "2.7.11" }
io-freefair-lombok = "8.0.1"
org-slf4j = { prefer = "1.7.36" }
jakarta-persistence = "2.2.3"
jakarta-validation = { prefer = "2.0.2" }
kotlin-logging-jvm = "2.1.23"
com-h2database = "2.1.214"
ch-qos-logback = { prefer = "1.4.4" }
com-fasterxml-jackson-core = { prefer = "2.14.1" }
org-hibernate = { prefer = "5.6.14.Final" }
org-hibernate-validator = { prefer = "6.2.5.Final" }
org-glassfish-javax-el = { prefer = "3.0.1-b12" }
org-modelmapper = { prefer = "3.1.1" }

[libraries]
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "org-slf4j" }
javax-jaxb = { module = "javax.xml.bind:jaxb-api", version = "2.3.1" }
bom-springboot = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "org-springframework-boot" }
spring-context = { module = "org.springframework:spring-context", version.ref = "org-springframework" }
springboot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "org-springframework-boot" }
springboot-test = { module = "org.springframework.boot:spring-boot-test", version.ref = "org-springframework-boot" }
springboot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "org-springframework-boot" }
springboot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot" }
springboot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging", version.ref = "org-springframework-boot" }
springboot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "org-springframework-boot" }
orika-core = { module = "ma.glasnost.orika:orika-core", version = "1.5.4" }
dozer-core = { module = "com.github.dozermapper:dozer-core", version = "6.5.2" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta-validation" }
kotlin-logging-jvm = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging-jvm" }
h2 = { module = "com.h2database:h2", version.ref = "com-h2database" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "ch-qos-logback" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "com-fasterxml-jackson-core" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "com-fasterxml-jackson-core" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "com-fasterxml-jackson-core" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "org-hibernate-validator" }
hibernate-envers = { module = "org.hibernate:hibernate-envers", version.ref = "org-hibernate" }
glassfish-javax-el = { module = "org.glassfish:javax.el", version.ref = "org-glassfish-javax-el" }
modelmapper = { module = "org.modelmapper:modelmapper", version.ref = "org-modelmapper" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "org-jetbrains-kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "org-jetbrains-kotlin" }
kotlin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "org-jetbrains-kotlin" }
kotlin-lombok = { id = "org.jetbrains.kotlin.plugin.lombok", version.ref = "org-jetbrains-kotlin" }
freefair-lombok = { id = "io.freefair.lombok", version.ref = "io-freefair-lombok" }
springboot = { id = "org.springframework.boot", version.ref = "org-springframework-boot" }
